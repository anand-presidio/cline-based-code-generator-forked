name: Sync GitHub to GitLab

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout GitHub repository with full history
      - name: Checkout GitHub Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch the full history to ensure full context

      # Step 2: Configure Git identity
      - name: Configure Git Identity
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"

      # Step 3: Setup SSH for GitLab
      - name: Setup SSH for GitLab
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GITLAB_SSH_KEY }}
          
      # Step 4: Add GitLab remote
      - name: Add GitLab remote
        run: |
          # Remove the remote if it already exists
          if git remote get-url gitlab &>/dev/null; then
            git remote remove gitlab
          fi

          # Add the gitlab remote
          git remote add gitlab ${{ env.GITLAB_REPO_URI }}

      # Step 5: Fetch GitLab branch
      - name: Fetch GitLab branch
        run: |
          BRANCH_NAME="${{ env.GITLAB_BRANCH_NAME || 'main' }}"
          echo "Fetching GitLab branch: $BRANCH_NAME"

          if ! git fetch gitlab $BRANCH_NAME; then
            echo "Failed to fetch GitLab branch"
            exit 1
          fi

      # Step 6: Reconcile and Push Changes
      - name: Reconcile and Push Changes
        run: |
          BRANCH_NAME="${{ env.GITLAB_BRANCH_NAME || 'main' }}"

          echo "Checkout Gitlab branch: $BRANCH_NAME"
          if ! git checkout gitlab/$BRANCH_NAME; then
            echo "Failed to checkout GitLab branch"
            exit 1
          fi
          
          # Compare branches
          echo "Checking for changes between gitlab:$BRANCH_NAME and current:$CI_COMMIT_REF_NAME"
          CHANGES=$(git diff --name-only origin/$CI_COMMIT_REF_NAME HEAD)

          if [ -z "$CHANGES" ]; then
            echo "No changes detected. Exiting."
            exit 0
          fi
          echo "Changes detected: $CHANGES"
          
          # Merge those changes to the current repo
          echo "Merging changes from current:$CI_COMMIT_REF_NAME to the gitlab:$BRANCH_NAME"
          if ! git merge origin/$CI_COMMIT_REF_NAME --allow-unrelated-histories --strategy-option=theirs; then
            echo "Failed to merge GitLab branch"
            exit 1
          fi

          # Push all the latest changes
          echo "Pushing changes to GitLab branch: $BRANCH_NAME"
          if ! git push gitlab $BRANCH_NAME; then
            echo "Normal push failed, attempting force push for branch"
            if ! git push --force gitlab $BRANCH_NAME; then
              echo "Failed to push changes to GitLab"
              exit 1
            fi
          fi
